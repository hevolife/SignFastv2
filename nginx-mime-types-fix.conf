# Configuration Nginx CORRIGÃ‰E avec MIME types pour modules JavaScript

server {
    listen 80;
    server_name signfast.pro www.signfast.pro;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name signfast.pro www.signfast.pro;

    # Certificats SSL
    ssl_certificate /etc/letsencrypt/live/signfast.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/signfast.pro/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    root /var/www/SignFastv2/dist;
    index index.html;

    # ðŸ”¥ CRITIQUE : MIME types pour modules JavaScript
    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/javascript                       js mjs;
        application/javascript                js mjs;
        application/json                      json;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        image/png                             png;
        image/svg+xml                         svg svgz;
        image/webp                            webp;
        font/woff                             woff;
        font/woff2                            woff2;
        application/pdf                       pdf;
    }

    # CSP avec Supabase autorisÃ©
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://signfast.hevolife.fr https://*.supabase.co wss://signfast.hevolife.fr; worker-src 'self' blob:; frame-src 'self'; object-src 'none'; base-uri 'self';" always;

    # Headers de sÃ©curitÃ©
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # ðŸ”¥ Fichiers PWA manquants - retourner 204 No Content
    location = /manifest.json {
        return 204;
        add_header Content-Type application/json;
        access_log off;
    }

    location = /sw.js {
        return 204;
        add_header Content-Type application/javascript;
        add_header Service-Worker-Allowed "/";
        access_log off;
    }

    location = /favicon.ico {
        return 204;
        access_log off;
        log_not_found off;
    }

    # ðŸ”¥ CRITIQUE : Modules JavaScript (.mjs) avec MIME type correct
    location ~* \.mjs$ {
        add_header Content-Type "text/javascript" always;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }

    # Assets statiques avec cache (AVANT le SPA routing)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # ðŸ”¥ SPA ROUTING - SANS =404 pour servir index.html sur toutes les routes
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Logs
    access_log /var/log/nginx/signfast_access.log;
    error_log /var/log/nginx/signfast_error.log;
}
